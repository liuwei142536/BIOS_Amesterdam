//
// This file contains an 'Intel Peripheral Driver' and is      
// licensed for Intel CPUs and chipsets under the terms of your
// license agreement with Intel or your vendor.  This file may 
// be modified by the user, subject to additional terms of the 
// license agreement                                           
//
// *++
//
// Copyright (c) 1999 - 2012 Intel Corporation. All rights reserved
// This software and associated documentation (if any) is furnished
// under a license and may only be used or copied in accordance
// with the terms of the license. Except as permitted by such
// license, no part of this software or documentation may be
// reproduced, stored in a retrieval system, or transmitted in any
// form or by any means without the express written consent of
// Intel Corporation.
// 
// 
// Module Name:
//
//   ProcessorSocketSetup.hfr 
// 
// Abstract:
// 
//   Processor Per-socket  Setup formset.
// 
// --*/


    //
    //  CPU Core Disable
    //

// Aptio V Override Start
#define CORES_TO_ENABLE_ID(INDEX) 0x285##INDEX

     numeric varid = SYSTEM_CONFIGURATION.CoresToEnable[INDEX],questionid=CORES_TO_ENABLE_ID(INDEX),
          prompt  = STRING_TOKEN(STR_CORE_ENABLE),
          help    = STRING_TOKEN(STR_CORE_ENABLE_HELP),
          flags   = RESET_REQUIRED,
          minimum  = 0,
          maximum = 18,
          step    = 1, // Stepping of 0 equates to a manual entering of a value, otherwise it will auto-increment with a left/right arrow
          default = 0,
     endnumeric;
#undef CORES_TO_ENABLE_ID

//CoreDisableMask may be updated by OEM BMC.
suppressif TRUE;
     numeric varid = SYSTEM_CONFIGURATION.CoreDisableMask[INDEX],
        #if ( INDEX == 0)
          prompt  = STRING_TOKEN(STR_CORE_DISABLE_BITMAP_PROMPT_0),
        #endif // INDEX == 0
        #if ( INDEX == 1)
          prompt  = STRING_TOKEN(STR_CORE_DISABLE_BITMAP_PROMPT_1),
        #endif // INDEX == 1
        #if ( INDEX == 2)
          prompt  = STRING_TOKEN(STR_CORE_DISABLE_BITMAP_PROMPT_2),
        #endif // INDEX == 2
        #if ( INDEX == 3)
          prompt  = STRING_TOKEN(STR_CORE_DISABLE_BITMAP_PROMPT_3),
        #endif // INDEX == 3
        #if ( INDEX == 4)
          prompt  = STRING_TOKEN(STR_CORE_DISABLE_BITMAP_PROMPT_4),
        #endif // INDEX == 4
        #if ( INDEX == 5)
          prompt  = STRING_TOKEN(STR_CORE_DISABLE_BITMAP_PROMPT_5),
        #endif // INDEX == 5
        #if ( INDEX == 6)
          prompt  = STRING_TOKEN(STR_CORE_DISABLE_BITMAP_PROMPT_6),
        #endif // INDEX == 6
        #if ( INDEX == 7)
          prompt  = STRING_TOKEN(STR_CORE_DISABLE_BITMAP_PROMPT_7),
        #endif // INDEX == 7

#ifdef SDP_FLAG
          help    = STRING_TOKEN(STR_STR_CORE_DISABLE_BITMAP_HELP_SDP),
#else          
          help    = STRING_TOKEN(STR_STR_CORE_DISABLE_BITMAP_HELP),
#endif
          flags   = DISPLAY_UINT_HEX | RESET_REQUIRED,
          minimum  = 0,
          maximum = MAX_CORE_BITMASK,
          step    = 1, // Stepping of 0 equates to a manual entering of a value, otherwise it will auto-increment with a left/right arrow
          default = 0,
     endnumeric;
endif;

// Aptio V Server Override End

     
    //
    //  CPU IOT/OCLA Config
    //     This featrue is internal-SV only for IVT, but external for HSX
    //     IotEnBboBitmap is a bitmap for IVT, but a Boolean value for HSX 
    //     (i.e.,  any non-zero value enables IOT config for all CBOs of a HSX CPU socket)
    //

      numeric varid = SYSTEM_CONFIGURATION.IotEnCboBitmap[INDEX],
        #if ( INDEX == 0)
          prompt  = STRING_TOKEN(STR_IOT_EN_BITMAP_PROMPT_0),
        #endif // INDEX == 0
        #if ( INDEX == 1)
          prompt  = STRING_TOKEN(STR_IOT_EN_BITMAP_PROMPT_1),
        #endif // INDEX == 1
        #if ( INDEX == 2)
          prompt  = STRING_TOKEN(STR_IOT_EN_BITMAP_PROMPT_2),
        #endif // INDEX == 2
        #if ( INDEX == 3)
          prompt  = STRING_TOKEN(STR_IOT_EN_BITMAP_PROMPT_3),
        #endif // INDEX == 3
        #if ( INDEX == 4)
          prompt  = STRING_TOKEN(STR_IOT_EN_BITMAP_PROMPT_4),
        #endif // INDEX == 4
        #if ( INDEX == 5)
          prompt  = STRING_TOKEN(STR_IOT_EN_BITMAP_PROMPT_5),
        #endif // INDEX == 5
        #if ( INDEX == 6)
          prompt  = STRING_TOKEN(STR_IOT_EN_BITMAP_PROMPT_6),
        #endif // INDEX == 6
        #if ( INDEX == 7)
          prompt  = STRING_TOKEN(STR_IOT_EN_BITMAP_PROMPT_7),
        #endif // INDEX == 7

          help    = STRING_TOKEN(STR_IOT_EN_BITMAP_HELP),
          flags   = DISPLAY_UINT_HEX | RESET_REQUIRED,
          minimum  = 0, 
          maximum = MAX_CORE_BITMASK,
          step     = 1, 
          default = 0,
      endnumeric;

    suppressif  ideqval  SYSTEM_CONFIGURATION.IotEnCboBitmap[INDEX] == 0;
      numeric varid = SYSTEM_CONFIGURATION.OclaMaxWay[INDEX],
        #if ( INDEX == 0)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_WAY_PROMPT_0),
        #endif // INDEX == 0
        #if ( INDEX == 1)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_WAY_PROMPT_1),
        #endif // INDEX == 1
        #if ( INDEX == 2)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_WAY_PROMPT_2),
        #endif // INDEX == 2
        #if ( INDEX == 3)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_WAY_PROMPT_3),
        #endif // INDEX == 3
        #if ( INDEX == 4)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_WAY_PROMPT_4),
        #endif // INDEX == 4
        #if ( INDEX == 5)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_WAY_PROMPT_5),
        #endif // INDEX == 5
        #if ( INDEX == 6)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_WAY_PROMPT_6),
        #endif // INDEX == 6
        #if ( INDEX == 7)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_WAY_PROMPT_7),
        #endif // INDEX == 7

          help    = STRING_TOKEN(STR_OCLA_MAX_WAY_HELP),
          flags   = RESET_REQUIRED,
          minimum  = OCLA_WAY_MIN, 
          maximum = OCLA_WAY_MAX,
          step       = 1,
          default   = OCLA_WAY_DEFAULT,
          default   = OCLA_WAY_DEFAULT, defaultstore = AmiMfgDefault,
      endnumeric;
    endif;
     

    suppressif  ideqval  SYSTEM_CONFIGURATION.IotEnCboBitmap[INDEX] == 0;
      numeric varid = SYSTEM_CONFIGURATION.OclaMaxTorEntry[INDEX],
        #if ( INDEX == 0)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_TOR_ENTRY_PROMPT_0),
        #endif // INDEX == 0
        #if ( INDEX == 1)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_TOR_ENTRY_PROMPT_1),
        #endif // INDEX == 1
        #if ( INDEX == 2)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_TOR_ENTRY_PROMPT_2),
        #endif // INDEX == 2
        #if ( INDEX == 3)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_TOR_ENTRY_PROMPT_3),
        #endif // INDEX == 3
        #if ( INDEX == 4)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_TOR_ENTRY_PROMPT_4),
        #endif // INDEX == 4
        #if ( INDEX == 5)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_TOR_ENTRY_PROMPT_5),
        #endif // INDEX == 5
        #if ( INDEX == 6)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_TOR_ENTRY_PROMPT_6),
        #endif // INDEX == 6
        #if ( INDEX == 7)
          prompt  = STRING_TOKEN(STR_OCLA_MAX_TOR_ENTRY_PROMPT_7),
        #endif // INDEX == 7

          help    = STRING_TOKEN(STR_OCLA_MAX_TOR_ENTRY_HELP),
          flags   = RESET_REQUIRED,
          minimum  = OCLA_TOR_ENTRY_MIN, 
          maximum = OCLA_TOR_ENTRY_MAX,
          step    = 1,
          default   = OCLA_TOR_ENTRY_DEFAULT,
          default   = OCLA_TOR_ENTRY_DEFAULT, defaultstore = AmiMfgDefault,
      endnumeric;
    endif;


