#
# This file contains 'Framework Code' and is licensed as such 
# under the terms of your license agreement with Intel or your
# vendor.  This file may not be modified, except as allowed by
# additional terms of your license agreement.                 
#
## @file
# Platform Package
#
# Cross Platform Modules for Tiano
# Copyright (c) 2008 - 2019, Intel Corporation. All rights reserved.<BR>
#
#    This software and associated documentation (if any) is furnished
#    under a license and may only be used or copied in accordance
#    with the terms of the license. Except as permitted by such
#    license, no part of this software or documentation may be
#    reproduced, stored in a retrieval system, or transmitted in any
#    form or by any means without the express written consent of
#    Intel Corporation.
#
##

[Defines]
  DEC_SPECIFICATION              = 0x00010005
  PACKAGE_NAME                   = PlatformPkg
  PACKAGE_GUID                   = 454FB726-6A01-49ce-B222-749CD093D3C5
  PACKAGE_VERSION                = 0.91

[Includes]  
 Include
 Ras/Include
 Ras/Smm/QuiesceSupport
 Ras/Smm/MemRas
 Include/Library
 Include/Guid
 Include/Protocol
 Ras/Whea/LastBootErrorLog
 
  
# AptioV server override start: Runtime ErrorLog support
  Ras/Smm/SmmErrorLog
  Ras/RuntimeErrorlog
# AptioV server override end: Runtime ErrorLog support
# Aptio V Server override: For including token.h. 
  ../Build
   
[Guids]
  gEfiIchTokenSpaceGuid         = { 0x89680aac, 0x452b, 0x4b44, { 0xae, 0xf7, 0x80, 0x0b, 0x6b, 0xfa, 0xf1, 0x95 }}
  gEfiPowerOnHobGuid            = { 0x468a601, 0xc535, 0x46fd, { 0xa9, 0x5d, 0xbb, 0xab, 0x99, 0x1b, 0x17, 0x8c }}
  gEfiAcpiTableStorageGuid      = { 0x7e374e25, 0x8e01, 0x4fee, { 0x87, 0xf2, 0x39, 0xc, 0x23, 0xc6, 0x6, 0xcd }}
  gEfiAcpiHwpStorageGuid      = {   0x4ba8c0db, 0x1858, 0x4b39, { 0x9d, 0x5e, 0xde, 0xd9, 0x29, 0x4d, 0xcc, 0x8e }}
								     							
  gEfiMemoryConfigDataGuid      = { 0x80dbd530, 0xb74c, 0x4f11, { 0x8c, 0x03, 0x41, 0x86, 0x65, 0x53, 0x28, 0x31 }}
  gSignalBeforeEnterSetupGuid   = { 0xd9f1669a, 0xf505, 0x48bd, { 0xa8, 0x92, 0x94, 0xb7, 0xca, 0x90, 0x30, 0x31 }}
  gEfiSetupVariableGuid = {0xec87d643, 0xeba4, 0x4bb5, {0xa1, 0xe5, 0x3f, 0x3e, 0x36, 0xb2, 0xd, 0xa9 }} 
  gEfiSetupVariableDefaultGuid = {0x99a96812, 0x4730, 0x4290, {0x8b, 0xfe, 0x7b, 0x4e, 0x51, 0x4f, 0xf9, 0x3b}}
  gEfiMfgUUIDHobGuid = { 0x229f268f, 0x23b0, 0x4436, { 0x83, 0xe3, 0x8b, 0x7a, 0xe0, 0x8a, 0x6b, 0xd8 }}
  gEfiGlobalVariableControlGuid = {0x8d247131, 0x385e, 0x491f, {0xba, 0x68, 0x8d, 0xe9, 0x55, 0x30, 0xb3, 0xa6}}
  gEfiFlashMapHobGuid = {0xb091e7d2, 0x5a0, 0x4198, {0x94, 0xf0, 0x74, 0xb7, 0xb8, 0xc5, 0x54, 0x59}}
  gEfiSystemNvDataHobGuid = {0xd6e5092d, 0xc7b2, 0x4872, {0xaf, 0x66, 0xfd, 0xc0, 0xe6, 0xf9, 0x5e, 0x78}}
  gEfiTcgWakeEventDataHobGuid = {0xBBB810BB, 0x5EF0, 0x4E8F, {0xB2, 0x98, 0xAD, 0x74, 0xAA, 0x50, 0xEF, 0x0A }}
  gEfiAdminPasswordHobGuid = {0x4E173307, 0x92DB, 0x4a4f, {0x9A, 0x8E, 0x86, 0xA8, 0x56, 0x49, 0xB4, 0x05 }}
  gPeiCapsuleOnFatFloppyDiskGuid = {0x2e3d2e75, 0x9b2e, 0x412d, {0xb4, 0xb1, 0x70, 0x41, 0x6b, 0x87, 0x0, 0xff }}
  gPeiCapsuleOnFatIdeDiskGuid = {0xb38573b6, 0x6200, 0x4ac5, {0xb5, 0x1d, 0x82, 0xe6, 0x59, 0x38, 0xd7, 0x83 }}
  gPeiCapsuleOnFatUsbDiskGuid = {0x0ffbce19, 0x324c, 0x4690, {0xa0, 0x09, 0x98, 0xc6, 0xae, 0x2e, 0xb1, 0x86 }}
  gPeiCapsuleOnDataCDGuid = {0x5cac0099, 0x0dc9, 0x48e5, {0x80, 0x68, 0xbb, 0x95, 0xf5, 0x40, 0x0a, 0x9f }}

  gMainPkgListGuid = { 0x6205c3a4, 0x1149, 0x491a, { 0xa6, 0xd6, 0x1e, 0x72, 0x3b, 0x87, 0x83, 0xb1 } }
  gAdvancedPkgListGuid = { 0xc09c81cb, 0x31e9, 0x4de6, { 0xa9, 0xf9, 0x17, 0xa1, 0x44, 0x35, 0x42, 0x45 } }
  gTpmPkgListGuid   = { 0x7da45aa9, 0x6dbf, 0x4f1b, { 0xa4, 0x3e, 0x32, 0x87, 0xcb, 0xe5, 0x13, 0x51 } }
  gSecurityPkgListGuid = { 0x3a885aae, 0x3e30, 0x42b9, { 0xa9, 0x76, 0x2f, 0x1f, 0x13, 0xbd, 0x70, 0x15 } }
  gBootOptionsPkgListGuid = { 0x62197ef0, 0x7b7e, 0x11e2, { 0xb9, 0x2a, 0x08, 0x00, 0x20, 0x0c, 0x9a, 0x66 } }
  gPfatModuleGuid   = { 0x7934156D, 0xCFCE, 0x460e, { 0x92, 0xF5, 0xA0, 0x79, 0x09, 0xA5, 0x9E, 0xCA } }
  gSmmTxtConfigLockGuid  = { 0xc282e903, 0x24e5, 0x4418, { 0xa9, 0x78, 0xa7, 0x41, 0x92, 0x49, 0xc9, 0xb0 }}
  gEfiOcDataGuid   = { 0x4af92599, 0x8e76, 0x4bb4, { 0xbf, 0xd2, 0xf5, 0xa6, 0x6e, 0x30, 0x41, 0xd4 } }
  #
  # PPR address variable
  #
  gEfiPprVariableGuid = { 0x6a159d4f, 0x6e6b, 0x4523, { 0xae, 0xb5, 0xf7, 0xaf, 0x1c, 0x44, 0x4b, 0xf } }
  
  ## guid for BiosId
  # Include/Guid/BiosId.h
  gEfiBiosIdGuid = { 0xC3E36D09, 0x8294, 0x4b97, { 0xA8, 0x57, 0xD5, 0x28, 0x8F, 0xE3, 0x3E, 0x28 }}
 
  
  gMiscProducerGuid = { 0x62512c92, 0x63c4, 0x4d80, {0x82, 0xb1, 0xc1, 0xa4, 0xdc, 0x44, 0x80, 0xe5} } 
  gSmbus2HostController = { 0xfc3dadec, 0x1e3c, 0x49ac, { 0x9c, 0xc8, 0x3c, 0x35, 0x97, 0xa8, 0xc8, 0x5f} } 
  gEfiServerCapsuleGuid = { 0xd400d1e4, 0xa314, 0x442b, { 0x89, 0xed, 0xa9, 0x2e, 0x4c, 0x81, 0x97, 0xcb } }
  gIioVVarGuid          = { 0xcccd2056, 0xd401, 0x4def, {0x85, 0xb0, 0x1f, 0xa1, 0x1f, 0xf3, 0xb5, 0xe3}}
  gEfiDprRegsProgrammedGuid      = { 0x4b844201, 0x6fe9, 0x41d1, { 0xb4, 0x6f, 0xdf, 0xfc, 0x34, 0xe4, 0x92, 0xa2 }}

  # Need to refer extern GUID by caller
  gPchEvaInt15HandlerFileGuid = { 0xA2B05C85, 0x8D5B, 0x4FF3, {0xB7, 0xD1, 0x8F, 0xbE, 0x92, 0xB4, 0xAA, 0x32}}
  #RAS
  gEfiAcpiParameterGuid          = { 0xcfd3c49b, 0x56dc, 0x465c, { 0xb3, 0xa0, 0x41, 0x9a, 0x8b, 0x42, 0xcb, 0x60 }}
  gEfiQpiRcParmGuid              = { 0x8149fbb8, 0xa2cf, 0x4234, { 0xb5, 0x06, 0xb7, 0x62, 0x55, 0xf7, 0xa3, 0x6d }}
  # Xml Cli Module
  gDramSharedMailBoxGuid  = { 0x9d99a394, 0x1878, 0x4d2c, { 0x98, 0xe9, 0xc1, 0x6b, 0x8e, 0xc4, 0x79, 0x33 }}
  gBiosKnobsDataBinGuid   = { 0x615E6021, 0x603D, 0x4124, { 0xB7, 0xEA, 0xC4, 0x8A, 0x37, 0x37, 0xBA, 0xCD }}
  gBrtTableGuid = { 0x7634afb3, 0x4f39, 0x40c8, { 0x84, 0x7e, 0xf4, 0x83, 0x51, 0x4f, 0xab, 0x91 }}

  #
  # Override from BP1.1, they could be removed after core package updated to BP1.1.
  #
  ## GUID used as the signature of FTW working block header.
  #  Include/Guid/SystemNvDataGuid.h
  gEdkiiWorkingBlockSignatureGuid   = { 0x9e58292b, 0x7c68, 0x497d, { 0xa0, 0xce, 0x65,  0x0, 0xfd, 0x9f, 0x1b, 0x95 }}
  ## GUID used to build FTW last write data hob and install PPI to inform the check for FTW last write data has been done.
  #  Include/Guid/FaultTolerantWrite.h
  gEdkiiFaultTolerantWriteGuid      = { 0x1d3e9cb8, 0x43af, 0x490b, { 0x83,  0xa, 0x35, 0x16, 0xaa, 0x53, 0x20, 0x47 }}
  gEfiVendorKeysNvGuid               = { 0x9073e4e0, 0x60ec, 0x4b6e, { 0x99, 0x3, 0x4c, 0x22, 0x3c, 0x26, 0xf, 0x3c } }

[Ppis]
  gPeiLegacyRegionPpiGuid   = { 0x1fae70ac, 0x8203, 0x48f0, { 0xb9, 0xef, 0xe8, 0x73, 0xff, 0xec, 0xc1, 0xf2 }}
  gPeiFlashMapPpiGuid = {0xf34c2fa0, 0xde88, 0x4270, {0x84, 0x14, 0x96, 0x12, 0x22, 0xf4, 0x52, 0x1c}}
  gPeiAtaPolicyPpiGuid = {0x1b8ddea4, 0xdeb2, 0x4152, {0x91, 0xc2, 0xb7, 0x3c, 0xb1, 0x6c, 0xe4, 0x64 }} 
  gEndOfPeiSignalPpiGuid = { 0x605EA650, 0xC65C, 0x42e1, {0xBA, 0x80, 0x91, 0xA5, 0x2A, 0xB6, 0x18, 0xC6}}

[Protocols]
  gEfiPlatformPolicyProtocolGuid = {0x2977064f, 0xab96, 0x4fa9, { 0x85, 0x45, 0xf9, 0xc4, 0x02, 0x51, 0xe0, 0x7f}}
  gEfiPlatformTypeProtocolGuid  = { 0x171e9398, 0x269c, 0x4081, { 0x90, 0x99, 0x38, 0x44, 0xe2, 0x60, 0x46, 0x6c }}

  gEfiDmaRemapProtocolGuid      = { 0x4e873773, 0x8391, 0x4e47, { 0xb7, 0xf4, 0xca, 0xfb, 0xdc, 0xc4, 0xb2, 0x04 }}
  gEfiGlobalNvsAreaProtocolGuid = { 0x74e1e48, 0x8132, 0x47a1, { 0x8c, 0x2c, 0x3f, 0x14, 0xad, 0x9a, 0x66, 0xdc }}

  gEfiPciIovPlatformProtocolGuid = { 0xf3a4b484, 0x9b26, 0x4eea, { 0x90, 0xe5, 0xa2, 0x6, 0x54, 0xc, 0xa5, 0x25 }}
  gEfiMpstSupportProtocolGuid    = { 0x5733eba8, 0x492d, 0x46fa, { 0xaa, 0x6a, 0x37, 0x97, 0x79, 0xe1, 0xb, 0x77}}
  gEfiWindowsInt10Workaround     = { 0x387f555, 0x20a8, 0x4fc2,  { 0xbb, 0x94, 0xcd, 0x30, 0xda, 0x1b, 0x40, 0x8  }}
  gEfiLegacyBootMarkerGuid       = { 0x72e07da8, 0x63a9, 0x42d4, { 0x83, 0xd5, 0xb, 0xb5, 0x18, 0x38, 0x44, 0x75 } }
  gEfiFvbExtensionProtocolGuid   = { 0x53a4c71b, 0xb581, 0x4170,  {0x91, 0xb3, 0x8d, 0xb8, 0x7a, 0x4b, 0x5c, 0x46}}
  gEfiAlternateFvBlockGuid       = { 0xf496922d, 0x172f, 0x4bbc,  {0xa1, 0xeb, 0xe, 0xeb, 0x94, 0x9c, 0x34, 0x86}}
  gAmiTseSetupEnterProtocolGuid  = { 0x71202EEE, 0x5F53, 0x40d9,  {0xAB, 0x3D, 0x9E,0x0C, 0x26, 0xD9, 0x66, 0x57}}
  
  #RAS
  gEfiQuiesceProtocolGuid        = { 0x20d6e759, 0x4c4a, 0x40c0, { 0x95, 0x33, 0x2b, 0xf0, 0x06, 0x68, 0x50, 0xfd }}
  gEfiIohUdsProtocolGuid         = { 0xa7ced760, 0xc71c, 0x4e1a, { 0xac, 0xb1, 0x89, 0x60, 0x4d, 0x52, 0x16, 0xcb }}
  gEfiQpiRasProtocolGuid         = { 0x8fdc888d, 0x2162, 0x4971, { 0x81, 0xc2, 0x35, 0xd3, 0xa1, 0xaa, 0x50, 0x47 }}
  gEfiMemRasProtocolGuid         = { 0x6d7e4a32, 0x9a73, 0x46ba, { 0x94, 0xa1, 0x5f, 0x2f, 0x25, 0xef, 0x3e, 0x29 }}
  gEfiSvSmmProtocolGuid          = { 0xf139bd77, 0x7ff7, 0x49d6, { 0x90, 0x86, 0xd5, 0xa, 0xb2, 0x6f, 0x6d, 0xd7}}
  gSmmPfatProtocolGuid           = { 0xc3e156e4, 0x27b3, 0x4dff, { 0xb8, 0x96, 0xfb, 0x11, 0x3b, 0x2e, 0x68, 0xb5 }}
  gEfiLegacySredirProtocolGuid   = { 0xA062CF1F, 0x8473, 0x4aa3, { 0x87, 0x93, 0x60, 0x0B, 0xC4, 0xFF, 0xA9, 0xA9 }}
  gXmlCliProtocolGuid            = { 0xe3e49b8d, 0x1987, 0x48d0, { 0x9a, 0x1, 0xed, 0xa1, 0x79, 0xca, 0xb, 0xd6 }}
  gEfiSmmCpuServiceProtocolGuid  = { 0x1d202cab, 0xc8ab, 0x4d5c, { 0x94, 0xf7, 0x3c, 0xfc, 0xc0, 0xd3, 0xd3, 0x35 }}
  gPlatformSlotInfoProtocolGuid  = { 0xf6a5f63e, 0x1aa0, 0x409f, { 0x83, 0x42, 0x6a, 0x1b, 0x8f, 0x2e, 0xd6, 0xbc }}
  gEfiMebxProtocolGuid           = { 0x01ab1829, 0xcecd, 0x4cfa, { 0xa1, 0x8c, 0xea, 0x75, 0xd6, 0x6f, 0x3e, 0x74 }}
  gEfiSmmErrorLogProtocolGuid  = {0x234f52e5, 0xd01c, 0x41c4, {0xb4, 0x37, 0x27, 0xdc, 0xd3, 0x89, 0x8d, 0xd5}}
  #
  # Override from BP1.1, they could be removed after core package updated to BP1.1.
  #
  ## This protocol is intended for use as a means to mark a variable read-only after the event EFI_END_OF_DXE_EVENT_GUID is signaled.
  #  Include/Protocol/VariableLock.h
  gEdkiiVariableLockProtocolGuid = { 0xcd3d0a05, 0x9e24, 0x437c, { 0xa8, 0x91, 0x1e, 0xe0, 0x53, 0xdb, 0x76, 0x38 }}

[PcdsFixedAtBuild]
  gPlatformTokenSpaceGuid.PcdFlashNvStorageBase|0xFFD20000|UINT32|0x20000007
  gPlatformTokenSpaceGuid.PcdFlashNvStorageSize|0x90000|UINT32|0x20000008
  gPlatformTokenSpaceGuid.PcdFlashNvStorageMicrocodeBase|0xFFF60000|UINT32|0x30000004
  gPlatformTokenSpaceGuid.PcdFlashNvStorageMicrocodeSize|0x00020000|UINT32|0x30000005
  gPlatformTokenSpaceGuid.PcdFlashNvStorageEventLogBase|0xFFD84000|UINT32|0x30000007
  gPlatformTokenSpaceGuid.PcdFlashNvStorageEventLogSize|0x00002000|UINT32|0x30000008
  gPlatformTokenSpaceGuid.PcdFlashFvSecPeiBase|0xFFFB0000|UINT32|0x20000004
  gPlatformTokenSpaceGuid.PcdFlashFvSecPeiSize|0x00050000|UINT32|0x20000005
  gPlatformTokenSpaceGuid.PcdFlashFvMrcNormalBase|0xFFE00000|UINT32|0x20000009
  gPlatformTokenSpaceGuid.PcdFlashFvMrcNormalSize|0x00160000|UINT32|0x2000000A
  gPlatformTokenSpaceGuid.PcdFlashFvMrcRecoveryBase|0xFFE80000|UINT32|0x2000000B
  gPlatformTokenSpaceGuid.PcdFlashFvMrcRecoverySize|0x00080000|UINT32|0x2000000C
  gPlatformTokenSpaceGuid.PcdFlashFvMainBase|0xFF800000|UINT32|0x20000001
  gPlatformTokenSpaceGuid.PcdFlashFvMainSize|0x00470000|UINT32|0x20000002
  gPlatformTokenSpaceGuid.PcdFlashAreaBaseAddress|0xFF800000|UINT32|0x10000001
  gPlatformTokenSpaceGuid.PcdFlashAreaSize|0x00800000|UINT32|0x10000002
  gPlatformTokenSpaceGuid.PcdFlashBackupRegionBase|0xFF800000|UINT32|0x30000001
  gPlatformTokenSpaceGuid.PcdFlashBackupRegionSize|0x00000000|UINT32|0x30000002
  ## This PCD specifies the size of the physical device containing the BIOS, SMBIOS will use it.
  gPlatformTokenSpaceGuid.PcdBiosSize|0x01000000|UINT32|0x10000003
  gPlatformTokenSpaceGuid.PcdCpuAddressWidthLimit|0x0|UINT8|0x3000000D
  
  gPlatformTokenSpaceGuid.PcdPostCompleteGpio|32|UINT64|0x60000000

  gEfiSerialPortTokenSpaceGuid.PcdSerialRegisterBase|0x3f8|UINT64|0x00000001
  gEfiSerialPortTokenSpaceGuid.PcdSerialBoudRate|115200|UINT32|0x00000002
  gEfiSerialPortTokenSpaceGuid.PcdUsbSerialEhciBus|0x00|UINT8|0x00000010
  gEfiSerialPortTokenSpaceGuid.PcdUsbSerialEhciDev|0x1D|UINT8|0x00000011
  gEfiSerialPortTokenSpaceGuid.PcdUsbSerialEhciFunc|0x00|UINT8|0x00000012

  gEfiIchTokenSpaceGuid.PcdIchAcpiIoPortBaseAddress|0x400|UINT16|0x00000001
  gEfiPchTokenSpaceGuid.PcdPchAcpiIoPortBaseAddress|0x400|UINT16|0x0000000B
  gEfiPchTokenSpaceGuid.PcdSmmActivationPort|0xb2|UINT16|0x30000001
  gEfiPchTokenSpaceGuid.PcdSmmDataPort|0xb3|UINT16|0x30000002
  gEfiPchTokenSpaceGuid.PcdSmmActivationData|0x55|UINT8|0x30000005
    
  gServerCommonTokenSpaceGuid.PcdAcpiDebugEnable|FALSE|BOOLEAN|0x40000006

  gEfiMdeModulePkgTokenSpaceGuid.PcdOnboardVideoBus|0x00|UINT8|0x00000010
  gEfiMdeModulePkgTokenSpaceGuid.PcdOnboardVideoDev|0x1C|UINT8|0x00000011
  gEfiMdeModulePkgTokenSpaceGuid.PcdOnboardVideoFunc|0x03|UINT8|0x00000012
  
#Aptio V Server Override - Add PcdsFixedAtBuild.
[PcdsDynamic, PcdsFixedAtBuild]
  gEfiMdeModulePkgTokenSpaceGuid.PcdHotkeyFlag|FALSE|BOOLEAN|0x10000005
  gServerCommonTokenSpaceGuid.PcdUefiOptimizedBoot|FALSE|BOOLEAN|0x10000001
  gServerCommonTokenSpaceGuid.PcdAcpiDebugAddress|0|UINT32|0x40000018
  gServerCommonTokenSpaceGuid.PcdAcpiDebugBufferSize|0x10000|UINT32|0x30000017
#
# Oem ID : INTEL
# Oem Table ID : INTEL ID
#
  gPlatformTokenSpaceGuid.PcdAcpiOemId|0x0000204C45544E49|UINT64|0x30000028
  gPlatformTokenSpaceGuid.PcdAcpiTableOemId|0x4449204C45544E49|UINT64|0x30000029

# AptioV Server OverRide Start: Adding 38400 BaudRate Support to ES2 and Lower Stepping
[PcdsDynamic, PcdsDynamicEx]
  gEfiSerialPortTokenSpaceGuid.PcdDynamicBaseBaudRate|153600|UINT32|0x00000003
  gEfiSerialPortTokenSpaceGuid.PcdDynamicBaudRate|38400|UINT32|0x00000004
  gEfiSerialPortTokenSpaceGuid.PcdUartDefaultBaudRate|115200|UINT32|0x00000005
# AptioV Server OverRide End: Adding 38400 BaudRate Support to ES2 and Lower Stepping
  
  
[PcdsFeatureFlag]
  ## This PCD specifies whether StatusCode is reported via USB Serial port.
  gEfiSerialPortTokenSpaceGuid.PcdStatusCodeUseUsbSerial|FALSE|BOOLEAN|0x00000020
  gPlatformTokenSpaceGuid.PcdSupportUnsignedCapsuleImage|TRUE|BOOLEAN|0x00000020
  
[PcdsFixedAtBuild, PcdsPatchableInModule, PcdsDynamic, PcdsDynamicEx]
#Indicate whether to perform LT Config lock
# The PCD can be set to false when there is the debug request
#    TRUE  - Force the LT config lock
#    FALSE - Allow the LT config unlock for debug
  gServerCommonTokenSpaceGuid.PcdLtConfigLockEnable|TRUE|BOOLEAN|0x3000000e  

#Indicate whether LTSX enabled
#    TRUE  - Intel (R) TXT feature enabled on the platform
#    FALSE - Disable Intel(R) TXT feature on the platform
  gServerCommonTokenSpaceGuid.PcdProcessorLtsxEnable | TRUE|BOOLEAN|0x3000000f
    